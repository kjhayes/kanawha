
config INIT_PROCESS_PATH
    string "init Path"
    default "init.bin"
    help
      Path to search for the init process ELF executable

config INIT_PROCESS_ARGV_VALUE
    string "init Arguments"
    default ""
    help
      Value to set the "ARGV" environment variable to on entry to the init process.

menu "printk Options"
config PRINTK_BUFFER_SIZE
    hex "printk Buffer Size"
    default 0x1000
    help
      Size of the printk static buffer in bytes

config PANIC_BUFFER_SIZE
    hex "panic Buffer Size"
    default 0x1000
    help
      Size of the panic static buffer in bytes

config PRINTK_MAX_EARLY_HANDLERS
    int "printk Maximum Early Handlers"
    default 8
    help
      Maximum number of "early" printk handlers during boot
endmenu

menu "Debug Options"
config DEBUGGING
    bool "Enable Debugging Options"
    default n
    help
      Root Debugging Config Option

config DEBUG_SYMBOLS
    bool "Include Debug Symbols"
    depends on DEBUGGING
    default y
    help
      Include debug symbols in kernel binary

config DEBUG_ASSERTIONS
    bool "Enable Debug Assertions"
    depends on DEBUGGING
    default y
    help
      Enable DEBUG_ASSERT Checking

config PERCPU_DEBUG_ASSERTIONS
    bool "Enable percpu Variable Debug Assertions"
    depends on DEBUGGING && DEBUG_ASSERTIONS
    default n
    help
      Enable the DEBUG_ASSERT_PERCPU_VALID assertion, which includes a percpu checksum variable
      used to make sure that the percpu variable subsystem is working correctly.

config DEBUG_BUDDY_ALLOC
    bool "Debug Buddy Allocators"
    depends on DEBUGGING
    default n
    help
      Debug kernel Buddy Allocators

config DEBUG_KHEAP_TOUCH
    bool "Touch kheap Allocations On Alloc and Free"
    depends on DEBUGGING
    default n
    help
      By memset-ing out all allocations made using the kheap allocators both
      during allocation and freeing, then we can trap the allocation and freeing
      with gdb watchpoints, making tracking down double-free errors easier.

config DEBUG_KMALLOC_BITMAP
    bool "Track kmalloc Allocations in a Global Bitmap"
    depends on DEBUGGING
    default n
    help
      Track every byte in the kmalloc heap with a large bitmap of allocations,
      this is really justed used for debugging the underlying allocator implemention,
      though it could be used to catch double free errors
      The static bitmap uses one bit per byte in the virtual size of the heap,
      so a small value of CONFIG_HEAP_SIZE_ORDER must be used.

config DEBUG_INIT_STAGES
    bool "Debug init Stages Framework"
    depends on DEBUGGING
    default n
    help
      Debug the init Stages Framework

config DEBUG_SPINLOCK_TRACK_THREADS
    bool "Spinlock Track Threads"
    depends on DEBUGGING
    default n
    help
      Have each spinlock track which thread is currently holding the lock
      so trivial cases of deadlocks can be detected.

config DEBUG_SYSCALLS
    bool "Debug syscalls"

menu "syscall Debugging"
depends on DEBUG_SYSCALLS

config STRACE_LOG_SYSCALL_BEGIN
    bool "Debug Log syscalls"
    depends on DEBUGGING && DEBUG_SYSCALLS
    default n
    help
      Log the beginning of each syscall (process ID and syscall ID)

config STRACE_LOG_SYSCALL_END
    bool "Debug Log syscall Endings"
    depends on DEBUGGING && DEBUG_SYSCALLS && STRACE_LOG_SYSCALL_BEGIN
    default n
    help
      Log the ending of each syscall, useful for debugging kernel bugs during the handling of a specific syscall

config DEBUG_SYSCALL_OPEN
    bool "Log Opened Files"
    depends on DEBUGGING && DEBUG_SYSCALLS
    default n
    help
      Log the file-names of each file opened by a process.

endmenu

endmenu

menu "Filesystems"
source "kernel/fs/Kconfig"
endmenu

menu "Drivers"
source "kernel/drivers/Kconfig"
endmenu

menu "Schedulers"
source "kernel/sched/Kconfig"
endmenu

menu "Misc. Modules"

config MULTIBOOT2
    tristate "Multiboot2 Support"
    default n
    depends on X64 || MIPS
    help
      Kernel support for the multiboot2 specification

menu "Multiboot2 Options"
source "kernel/mb2/Kconfig"
endmenu

endmenu
